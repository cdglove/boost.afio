[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/structboost_1_1afio_1_1async__path__op__req_1_1absolute.xml]
[section:async_path_op_req_absolute async_path_op_req::absolute]

'''<indexterm><primary>async_path_op_req</primary></indexterm><indexterm><primary>absolute</primary></indexterm>'''
Convenience tag type constructing an absolute path async_path_op_req. 

[heading Synopsis]
``struct async_path_op_req::absolute
      : public async_path_op_req
{
  bool is_relative;          // Whether the precondition is also where this path begins. 
  boost::afio::path path;    // The filing system path to be used for this operation. 
  file_flags flags;          // The flags to be used for this operation (note they can be overriden by flags passed during dispatcher construction). 
  async_io_op precondition;  // An optional precondition for this operation 
};
``

[heading Constructor(s)]
[table
[[Function] [Description] [Parameters] ]
[[``template<class T>
absolute(async_io_op _precondition, T && _path, file_flags _flags = file_flags::None)``

] [Constructs an instance. ] [[* async_io_op]: ['_precondition]:  The precondition for this operation. 

[* T &&]: ['_path]:  The filing system path to be used. 

[* file_flags]: ['_flags]:  The flags to be used. 




]]
]

[heading Member Function(s)]
[table
[[Function] [Description] [Parameters]  [Returns]]
[[``bool validate()``

] [Validates contents. ] [


]]
]

[heading Header]
`#include <boost/afio/afio.hpp>`

[endsect]

