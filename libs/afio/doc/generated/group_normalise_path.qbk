[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/group__normalise__path.xml]
[section:normalise_path normalise_path]

'''<indexterm><primary>normalise_path</primary></indexterm>'''
Return a normalised filesystem::path from an AFIO path. 

[heading Description]
On POSIX this passes through its input unchanged.

On Windows AFIO exclusively uses NT kernel paths which are not necessarily trivially convertible to Win32 paths. As an example, the Win32 path [^`C:\\Foo`] might be [^`\\??\\C:\\Foo`] or even [^`\\Device\\HarddiskVolume1\\Foo`]. This function will convert any NT kernel path into something which can be fed to normal Win32 APIs - a drive letter if available, else a GUID volume path, and with an extended path prefix if the path is sufficiently long. It also scans the path for characters illegal under Win32 or paths which begin with a space or end with a period, and will extended path prefix such paths as well.

[heading Synopsis]
``filesystem::path normalise_path(path p, path_normalise type = path_normalise::dos)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[path] [] [p] [Path to be normalised ]]
[[path_normalise] [] [type] [A path_normalise enum ]]
]


[heading Header]
`#include <boost/afio/afio.hpp>`


[endsect]

