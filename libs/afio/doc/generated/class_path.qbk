[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/classboost_1_1afio_1_1path.xml]
[section:path path]

'''<indexterm><primary>path</primary></indexterm>'''
An AFIO filesystem path, a thin wrapper of filesystem::path used to mark when a filesystem path has been prepared for AFIO usage. Note that on Windows this exclusively refers to a case sensitive NT kernel path, not a Win32 path (Win32 paths are converted in the constructor). 

[heading Synopsis]
``class path
      : protected path
{
  // ...
};
``

[heading Constructor(s)]
[table
[[Function] [Description] [Parameters] ]
[[``path()``

] [Default constructor. ] [


]]
[[``path(const path & p)``

] [Copy constructor. ] [[* const path &]: ['p]:  




]]
[[``path(const filesystem::path & p)``

] [Converts a filesystem::path to AFIO format. ] [[* const filesystem::path &]: ['p]:  




]]
[[``path(const char * p)``

] [Converts a filesystem::path to AFIO format. ] [[* const char *]: ['p]:  




]]
[[``path(const string_type & p)``

] [Converts a filesystem::path to AFIO format. ] [[* const string_type &]: ['p]:  




]]
[[``path(path && p)``

] [Move constructor. ] [[* path &&]: ['p]:  




]]
[[``path(filesystem::path && p)``

] [Converts a filesystem::path to AFIO format. ] [[* filesystem::path &&]: ['p]:  




]]
[[``path(string_type && p)``

] [Converts a filesystem::path to AFIO format. ] [[* string_type &&]: ['p]:  




]]
[[``template<class InputIterator>
path(InputIterator begin, InputIterator end)``

] [Converts source to AFIO path format. ] [[* InputIterator]: ['begin]:  

[* InputIterator]: ['end]:  




]]
]

[heading Member Function(s)]
[table
[[Function] [Description] [Parameters]  [Returns]]
[[``path & operator=(const path & p)``

] [Copy assignment. ] [[* const path &]: ['p]:  




]]
[[``path & operator=(path && p)``

] [Move assignment. ] [[* path &&]: ['p]:  




]]
[[``template<class Source>
path & assign(Source const & source)``

] [Converts source to AFIO path format. ] [[* Source const &]: ['source]:  




]]
[[``template<class InputIterator>
path & assign(InputIterator begin, InputIterator end)``

] [] [[* InputIterator]: ['begin]:  

[* InputIterator]: ['end]:  




]]
[[``path & operator/=(const path & p)``

] [] [[* const path &]: ['p]:  




]]
[[``template<class Source>
path & operator/=(Source const & source)``

] [] [[* Source const &]: ['source]:  




]]
[[``template<class Source>
path & append(Source const & source)``

] [] [[* Source const &]: ['source]:  




]]
[[``template<class InputIterator>
path & append(InputIterator begin, InputIterator end)``

] [] [[* InputIterator]: ['begin]:  

[* InputIterator]: ['end]:  




]]
[[``path & operator+=(const path & x)``

] [] [[* const path &]: ['x]:  




]]
[[``path & operator+=(const string_type & x)``

] [] [[* const string_type &]: ['x]:  




]]
[[``path & operator+=(const value_type * x)``

] [] [[* const value_type *]: ['x]:  




]]
[[``path & operator+=(value_type x)``

] [] [[* value_type]: ['x]:  




]]
[[``template<class Source>
path & operator+=(Source const & x)``

] [] [[* Source const &]: ['x]:  




]]
[[``template<class Source>
path & concat(Source const & x)``

] [] [[* Source const &]: ['x]:  




]]
[[``template<class InputIterator>
path & concat(InputIterator begin, InputIterator end)``

] [] [[* InputIterator]: ['begin]:  

[* InputIterator]: ['end]:  




]]
[[``path & make_preferred()``

] [] [


]]
[[``path & remove_filename()``

] [] [


]]
[[``path & replace_extension(const path & new_extension = path())``

] [] [[* const path &]: ['new_extension]:  




]]
[[``path root_name()``

] [] [


]]
[[``path root_directory()``

] [] [


]]
[[``path root_path()``

] [] [


]]
[[``path relative_path()``

] [] [


]]
[[``path parent_path()``

] [] [


]]
[[``path filename()``

] [] [


]]
[[``path stem()``

] [] [


]]
[[``path extension()``

] [] [


]]
[[``iterator begin()``

] [] [


]]
[[``iterator end()``

] [] [


]]
[[``filesystem::path filesystem_path()``

] [Return a normalised filesystem::path from an AFIO path. ] [


]]
]

[heading Header]
`#include <boost/afio/afio.hpp>`

[include generated/struct_path_1_1make_absolute.qbk]
[include generated/group_normalise_path.qbk]
[include generated/struct_path_hash.qbk]

[endsect]

