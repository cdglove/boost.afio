[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/group__async__file__io__dispatcher__base____misc.xml]
[section:complete_async_op_3_normal complete_async_op (normal)]

'''<indexterm><primary>complete_async_op</primary></indexterm>'''
Completes an operation with a handle or an error, usually used when an operation was previously deferred. 

[heading Synopsis]
``void async_file_io_dispatcher_base::complete_async_op(size_t id, std::shared_ptr< async_io_handle > h, exception_ptr e = exception_ptr())``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[size_t] [] [id] []]
[[std::shared_ptr< async_io_handle >] [] [h] []]
[[exception_ptr] [] [e] []]
]


[heading Header]
`#include <boost/afio/afio.hpp>`

[heading Complexity]O(N) where N is the number of completions dependent on this op.
[heading Exception Model]Should not throw any exception except for out of memory.


[endsect]

[section:complete_async_op_2_errored complete_async_op (errored)]

'''<indexterm><primary>complete_async_op</primary></indexterm>'''
Completes an operation with an error, usually used when an operation was previously deferred. 

[heading Synopsis]
``void async_file_io_dispatcher_base::complete_async_op(size_t id, exception_ptr e)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[size_t] [] [id] []]
[[exception_ptr] [] [e] []]
]


[heading Header]
`#include <boost/afio/afio.hpp>`

[heading Complexity]O(N) where N is the number of completions dependent on this op.
[heading Exception Model]Should not throw any exception except for out of memory.


[endsect]

