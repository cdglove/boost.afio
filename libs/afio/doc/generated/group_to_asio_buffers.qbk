[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/group__to__asio__buffers.xml]
[section:to_asio_buffers_1_asio_mutable_buffer to_asio_buffers (asio mutable_buffer)]

'''<indexterm><primary>to_asio_buffers</primary></indexterm>'''
Passing through asio::mutable\u005fbuffer. 

[heading Synopsis]
``std::vector<asio::mutable_buffer> to_asio_buffers(asio::mutable_buffer & v)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[asio::mutable_buffer &] [] [v] []]
]


[heading Returns]
A vector of ASIO buffers

[heading Header]
`#include <boost/afio/afio.hpp>`


[endsect]

[section:to_asio_buffers_1_asio_const_buffer to_asio_buffers (asio const_buffer)]

'''<indexterm><primary>to_asio_buffers</primary></indexterm>'''
Passing through asio::const\u005fbuffer. 

[heading Synopsis]
``std::vector<asio::const_buffer> to_asio_buffers(asio::const_buffer & v)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[asio::const_buffer &] [] [v] []]
]


[heading Returns]
A vector of ASIO buffers

[heading Header]
`#include <boost/afio/afio.hpp>`


[endsect]

[section:to_asio_buffers_2_buffer_of_t to_asio_buffers (buffer of T)]

'''<indexterm><primary>to_asio_buffers</primary></indexterm>'''
A buffer at v sized length*sizeof(T) 

[heading Synopsis]
``template<class T>
std::vector<asio::mutable_buffer> to_asio_buffers(T * v, size_t length)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[class T] [Any trivial type T ] [ - ] [Must be specified]]
[[T *] [] [v] []]
[[size_t] [] [length] []]
]


[heading Returns]
A vector of ASIO buffers

[heading Header]
`#include <boost/afio/afio.hpp>`


[endsect]

[section:to_asio_buffers_2_const_buffer_of_t to_asio_buffers (const buffer of T)]

'''<indexterm><primary>to_asio_buffers</primary></indexterm>'''
A buffer at v sized length*sizeof(T) 

[heading Synopsis]
``template<class T>
std::vector<asio::const_buffer> to_asio_buffers(const T * v, size_t length)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[class T] [Any trivial type T ] [ - ] [Must be specified]]
[[const T *] [] [v] []]
[[size_t] [] [length] []]
]


[heading Returns]
A vector of ASIO buffers

[heading Header]
`#include <boost/afio/afio.hpp>`


[endsect]

[section:to_asio_buffers_2_buffer to_asio_buffers (buffer)]

'''<indexterm><primary>to_asio_buffers</primary></indexterm>'''
A buffer at v sized length. 

[heading Synopsis]
``std::vector<asio::mutable_buffer> to_asio_buffers(void * v, size_t length)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[void *] [] [v] []]
[[size_t] [] [length] []]
]


[heading Returns]
A vector of ASIO buffers

[heading Header]
`#include <boost/afio/afio.hpp>`


[endsect]

[section:to_asio_buffers_2_const_buffer_of_t to_asio_buffers (const buffer of T)]

'''<indexterm><primary>to_asio_buffers</primary></indexterm>'''
A buffer at v sized length. 

[heading Synopsis]
``std::vector<asio::const_buffer> to_asio_buffers(const void * v, size_t length)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[const void *] [] [v] []]
[[size_t] [] [length] []]
]


[heading Returns]
A vector of ASIO buffers

[heading Header]
`#include <boost/afio/afio.hpp>`


[endsect]

[section:to_asio_buffers_1_trivial_and_container_types to_asio_buffers (trivial and container types)]

'''<indexterm><primary>to_asio_buffers</primary></indexterm>'''
Any trivial type T or STL container. 

[heading Description]
Trivial types turn into a buffer of &v sized sizeof(T). Container types have their value type deduced and to\u005fasio\u005fbuffers() called on that value\u005ftype. Additional specialisations are provided for string, vector and array to collapse the scatter gather buffers into a single one for contiguous storage.

[heading Synopsis]
``template<class T>
std::vector< asio::mutable_buffer > to_asio_buffers(T & v)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[class T] [Any trivial type T or STL container ] [ - ] [Must be specified]]
[[T &] [] [v] []]
]


[heading Returns]
A vector of ASIO buffers

[heading Header]
`#include <boost/afio/afio.hpp>`


[endsect]

[section:to_asio_buffers_1_const_trivial_and_container_types to_asio_buffers (const trivial and container types)]

'''<indexterm><primary>to_asio_buffers</primary></indexterm>'''
Any trivial type T or STL container. 

[heading Description]
Trivial types turn into a buffer of &v sized sizeof(T). Container types have their value type deduced and to\u005fasio\u005fbuffers() called on that value\u005ftype. Additional specialisations are provided for string, vector and array to collapse the scatter gather buffers into a single one for contiguous storage.

[heading Synopsis]
``template<class T>
std::vector< asio::const_buffer > to_asio_buffers(const T & v)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[class T] [Any trivial type T or STL container ] [ - ] [Must be specified]]
[[const T &] [] [v] []]
]


[heading Returns]
A vector of ASIO buffers

[heading Header]
`#include <boost/afio/afio.hpp>`


[endsect]

[section:to_asio_buffers_1_c_arrays to_asio_buffers (C arrays)]

'''<indexterm><primary>to_asio_buffers</primary></indexterm>'''
A buffer at v sized N*sizeof(T) 

[heading Synopsis]
``template<class T, size_t N>
std::vector< asio::mutable_buffer > to_asio_buffers(T(&) v)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[class T] [Any trivial type T ] [ - ] [Must be specified]]
[[N] [] [ - ] [Must be specified]]
[[T(&)] [] [v] []]
]


[heading Returns]
A vector of ASIO buffers

[heading Header]
`#include <boost/afio/afio.hpp>`


[endsect]

[section:to_asio_buffers_1_const_c_arrays to_asio_buffers (const C arrays)]

'''<indexterm><primary>to_asio_buffers</primary></indexterm>'''
A buffer at v sized N*sizeof(T) 

[heading Synopsis]
``template<class T, size_t N>
std::vector< asio::const_buffer > to_asio_buffers(const T(&) v)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[class T] [Any trivial type T ] [ - ] [Must be specified]]
[[N] [] [ - ] [Must be specified]]
[[const T(&)] [] [v] []]
]


[heading Returns]
A vector of ASIO buffers

[heading Header]
`#include <boost/afio/afio.hpp>`


[endsect]

