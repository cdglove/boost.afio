[/============================================================================
  Boost.AFIO

  Use, modification and distribution is subject to the Boost Software License,
  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)
=============================================================================/]


[/ Generated by doxygen_xml2qbk 1.1.1, don't change, will be overwritten automatically]
[/ Generated from doxy/doxygen_output/xml/group__utils.xml]
[section:page_sizes page_sizes]

'''<indexterm><primary>page_sizes</primary></indexterm>'''
Returns the page sizes of this architecture which is useful for calculating direct i/o multiples. 

[heading Synopsis]
``BOOST_AFIO_DECL std::vector<size_t> utils::page_sizes(bool only_actually_available = true)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[bool] [] [only_actually_available] [Only return page sizes actually available to the user running this process ]]
]


[heading Returns]
The page sizes of this architecture.

[heading Header]
`#include <boost/afio/afio.hpp>`

[heading Complexity]Whatever the system API takes (one would hope constant time).
[heading Exception Model]Any error from the operating system or std::bad_alloc.


[endsect]

[section:file_buffer_default_size file_buffer_default_size]

'''<indexterm><primary>file_buffer_default_size</primary></indexterm>'''
Returns a reasonable default size for file\u005fbuffer\u005fallocator, typically the closest page size from page\u005fsizes() to 1Mb. 

[heading Synopsis]
``size_t utils::file_buffer_default_size()``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
]


[heading Returns]
A value of a TLB large page size close to 1Mb.

[heading Header]
`#include <boost/afio/afio.hpp>`

[heading Complexity]Whatever the system API takes (one would hope constant time).
[heading Exception Model]Any error from the operating system or std::bad_alloc.


[endsect]

[section:random_fill random_fill]

'''<indexterm><primary>random_fill</primary></indexterm>'''
Fills the buffer supplied with cryptographically strong randomness. Uses the OS kernel API. 

[heading Synopsis]
``BOOST_AFIO_DECL void utils::random_fill(char * buffer, size_t bytes)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[char *] [] [buffer] [A buffer to fill ]]
[[size_t] [] [bytes] [How many bytes to fill]]
]


[heading Header]
`#include <boost/afio/afio.hpp>`

[heading Complexity]Whatever the system API takes.
[heading Exception Model]Any error from the operating system.


[endsect]

[section:to_hex_string to_hex_string]

'''<indexterm><primary>to_hex_string</primary></indexterm>'''
Converts a number to a hex string. Out buffer can be same as in buffer. 

[heading Description]
Note that the character range used is a 16 item table of:

0123456789abcdef

This lets one pack one byte of input into two bytes of output.

[heading Synopsis]
``size_t utils::to_hex_string(char * out, size_t outlen, const char * _in, size_t inlen)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[char *] [] [out] []]
[[size_t] [] [outlen] []]
[[const char *] [] [_in] []]
[[size_t] [] [inlen] []]
]


[heading Header]
`#include <boost/afio/afio.hpp>`

[heading Complexity]O(N) where N is the length of the number.
[heading Exception Model]Throws exception if output buffer is too small for input.


[endsect]

[section:from_hex_string from_hex_string]

'''<indexterm><primary>from_hex_string</primary></indexterm>'''
Converts a hex string to a number. Out buffer can be same as in buffer. 

[heading Description]
Note that this routine is about 43% slower than to\u005fhex\u005fstring(), half of which is due to input validation.

[heading Synopsis]
``size_t utils::from_hex_string(char * out, size_t outlen, const char * in, size_t inlen)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[char *] [] [out] []]
[[size_t] [] [outlen] []]
[[const char *] [] [in] []]
[[size_t] [] [inlen] []]
]


[heading Header]
`#include <boost/afio/afio.hpp>`

[heading Complexity]O(N) where N is the length of the string.
[heading Exception Model]Throws exception if output buffer is too small for input or input size is not multiple of two.


[endsect]

[section:random_string random_string]

'''<indexterm><primary>random_string</primary></indexterm>'''
Returns a cryptographically random string capable of being used as a filename. Essentially random\u005ffill() + to\u005fhex\u005fstring(). 

[heading Synopsis]
``std::string utils::random_string(size_t randomlen)``

[heading Parameters]

[table
[[Type] [Concept] [Name] [Description] ]
[[size_t] [] [randomlen] [The number of bytes of randomness to use for the string. ]]
]


[heading Returns]
A string representing the randomness at a 2x ratio, so if 32 bytes were requested, this string would be 64 bytes long.

[heading Header]
`#include <boost/afio/afio.hpp>`

[heading Complexity]Whatever the system API takes.
[heading Exception Model]Any error from the operating system.


[endsect]

